local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\103\148","\46\73\186\85\212\235\146"),function(v42) if (v9(v42,2)==81) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v128=0;local v129;while true do if (0==v128) then v129=v13(v102,v30);v30=nil;v128=1;end if (v128==1) then return v129;end end else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v103-(v103%1) ;else local v104=0;local v105;while true do if (0==v104) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (3 -1) ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,53 -32 ,31);local v60=((v31(v56,651 -(555 + 64) )==1) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/((933 -(857 + 74))^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (1==v62) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==0) then v63=nil;if  not v61 then local v120=0;while true do if (v120==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==2) then v64={};for v113=1, #v63 do v64[v113]=v10(v9(v11(v63,v113,v113)));end v62=3;end if (v62==3) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=0;local v80;local v81;while true do if (v79==1) then if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v70[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1 + 0 )==0) then local v109=v31(v83,2,3);local v110=v31(v83,4,6);local v111={v33(),v33(),nil,nil};if (v109==0) then local v121=0;while true do if (v121==0) then v111[880 -(282 + 595) ]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[3]=v34();elseif (v109==2) then v111[3]=v34() -(2^(1653 -(1523 + 114))) ;elseif (v109==3) then v111[3]=v34() -(2^16) ;v111[4]=v33();end if (v31(v110,1,1)==1) then v111[2 + 0 ]=v70[v111[2 -0 ]];end if (v31(v110,1067 -(68 + 997) ,2)==1) then v111[3]=v70[v111[3]];end if (v31(v110,1273 -(226 + 1044) ,3)==1) then v111[4]=v70[v111[4]];end v65[v82]=v111;end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + (4 -3) ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=60) then if (v99<=29) then if (v99<=14) then if (v99<=6) then if (v99<=(119 -(32 + 85))) then if (v99<=0) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==1) then local v145=0;local v146;local v147;local v148;local v149;while true do if (1==v145) then v91=(v148 + v146) -1 ;v149=0;v145=2;end if (v145==2) then for v451=v146,v91 do v149=v149 + 1 ;v96[v451]=v147[v149];end break;end if (v145==0) then v146=v98[2];v147,v148=v89(v96[v146](v21(v96,v146 + 1 ,v98[3])));v145=1;end end else v73[v98[3]]=v96[v98[2]];end elseif (v99<=(4 + 0)) then if (v99>3) then local v152=v98[2];v96[v152]=v96[v152](v21(v96,v152 + 1 ,v98[3]));else v73[v98[3]]=v96[v98[2]];end elseif (v99>5) then v96[v98[1 + 1 ]]=v98[3] + v96[v98[4]] ;else local v157=0;local v158;while true do if (v157==0) then v158=v98[2];do return v96[v158](v21(v96,v158 + 1 ,v98[3]));end break;end end end elseif (v99<=10) then if (v99<=8) then if (v99==7) then local v159=0;local v160;local v161;local v162;while true do if (v159==1) then v162=v96[v160] + v161 ;v96[v160]=v162;v159=2;end if (v159==2) then if (v161>0) then if (v162<=v96[v160 + (958 -(892 + 65)) ]) then v90=v98[3];v96[v160 + 3 ]=v162;end elseif (v162>=v96[v160 + 1 ]) then local v519=0;while true do if (v519==0) then v90=v98[7 -4 ];v96[v160 + 3 ]=v162;break;end end end break;end if (0==v159) then v160=v98[2];v161=v96[v160 + 2 ];v159=1;end end else local v163=0;local v164;local v165;local v166;while true do if (v163==0) then v164=v98[2];v165=v96[v164];v163=1;end if (v163==1) then v166=v98[3];for v454=1,v166 do v165[v454]=v96[v164 + v454 ];end break;end end end elseif (v99>9) then do return v96[v98[2]];end else v90=v98[3];end elseif (v99<=12) then if (v99==11) then v96[v98[3 -1 ]]=v98[4 -1 ]~=0 ;else local v169=v98[352 -(87 + 263) ];v96[v169]=v96[v169](v96[v169 + 1 ]);end elseif (v99==13) then local v171=0;local v172;while true do if (v171==0) then v172=v98[2];v96[v172](v96[v172 + 1 ]);break;end end else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=21) then if (v99<=17) then if (v99<=15) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==(196 -(67 + 113))) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v175=0;local v176;local v177;local v178;local v179;while true do if (v175==2) then for v457=v176,v91 do v179=v179 + 1 ;v96[v457]=v177[v179];end break;end if (v175==1) then v91=(v178 + v176) -(1 + 0) ;v179=0;v175=2;end if (v175==0) then v176=v98[2];v177,v178=v89(v96[v176](v96[v176 + 1 ]));v175=1;end end end elseif (v99<=(46 -27)) then if (v99>18) then do return v96[v98[2]];end else local v180=0;local v181;local v182;local v183;while true do if (v180==0) then v181=v98[2];v182=v96[v181 + 2 ];v180=1;end if (2==v180) then if (v182>0) then if (v183<=v96[v181 + 1 ]) then local v520=0;while true do if (v520==0) then v90=v98[3];v96[v181 + 3 ]=v183;break;end end end elseif (v183>=v96[v181 + 1 ]) then v90=v98[3];v96[v181 + 3 ]=v183;end break;end if (v180==1) then v183=v96[v181] + v182 ;v96[v181]=v183;v180=2;end end end elseif (v99==20) then local v184=v87[v98[3]];local v185;local v186={};v185=v18({},{[v7("\253\190\31\240\61\235\64","\56\162\225\118\158\89\142")]=function(v352,v353) local v354=v186[v353];return v354[1][v354[2]];end,[v7("\99\58\206\170\53\209\82\1\197\183","\184\60\101\160\207\66")]=function(v355,v356,v357) local v358=0;local v359;while true do if (0==v358) then v359=v186[v356];v359[1][v359[2]]=v357;break;end end end});for v360=1,v98[4] do local v361=0;local v362;while true do if (v361==1) then if (v362[1]==91) then v186[v360-1 ]={v96,v362[3]};else v186[v360-1 ]={v73,v362[3]};end v95[ #v95 + 1 ]=v186;break;end if (v361==0) then v90=v90 + 1 ;v362=v86[v90];v361=1;end end end v96[v98[2]]=v40(v184,v185,v74);else v96[v98[2]]={};end elseif (v99<=25) then if (v99<=23) then if (v99==22) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v189=v98[2];local v190,v191=v89(v96[v189](v21(v96,v189 + 1 ,v91)));v91=(v191 + v189) -1 ;local v192=0;for v363=v189,v91 do local v364=0;while true do if (v364==0) then v192=v192 + 1 ;v96[v363]=v190[v192];break;end end end end elseif (v99==(18 + 6)) then v96[v98[2]]=v74[v98[3]];else v96[v98[2]]();end elseif (v99<=27) then if (v99>26) then local v195=0;local v196;local v197;while true do if (v195==0) then v196=v98[2];v197=v96[v196];v195=1;end if (v195==1) then for v466=v196 + (3 -2) ,v98[3] do v15(v197,v96[v466]);end break;end end else v96[v98[2]]= #v96[v98[3]];end elseif (v99>28) then local v199=0;local v200;local v201;local v202;local v203;while true do if (v199==1) then v91=(v202 + v200) -1 ;v203=0;v199=2;end if (v199==2) then for v467=v200,v91 do v203=v203 + 1 ;v96[v467]=v201[v203];end break;end if (v199==0) then v200=v98[2];v201,v202=v89(v96[v200](v96[v200 + 1 ]));v199=1;end end else v96[v98[2]][v96[v98[955 -(802 + 150) ]]]=v96[v98[4]];end elseif (v99<=44) then if (v99<=36) then if (v99<=32) then if (v99<=(80 -50)) then v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;elseif (v99==31) then local v206=0;local v207;while true do if (v206==0) then v207=v98[2];do return v21(v96,v207,v91);end break;end end else v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;end elseif (v99<=34) then if (v99>33) then local v209=v98[2];v96[v209](v21(v96,v209 + 1 ,v91));else local v210=0;local v211;local v212;while true do if (v210==0) then v211=v98[2];v212={};v210=1;end if (v210==1) then for v470=1 -0 , #v95 do local v471=0;local v472;while true do if (v471==0) then v472=v95[v470];for v539=0, #v472 do local v540=0;local v541;local v542;local v543;while true do if (v540==0) then v541=v472[v539];v542=v541[1 + 0 ];v540=1;end if (v540==1) then v543=v541[2];if ((v542==v96) and (v543>=v211)) then local v559=0;while true do if (0==v559) then v212[v543]=v542[v543];v541[998 -(915 + 82) ]=v212;break;end end end break;end end end break;end end end break;end end end elseif (v99==35) then do return;end elseif (v98[2]<v96[v98[4]]) then v90=v90 + (2 -1) ;else v90=v98[3];end elseif (v99<=40) then if (v99<=(23 + 15)) then if (v99>37) then v96[v98[2]]=v98[3];else v96[v98[2 -0 ]]=v98[3]~=0 ;end elseif (v99>39) then local v216=v98[2];local v217=v98[4];local v218=v216 + 2 ;local v219={v96[v216](v96[v216 + 1 ],v96[v218])};for v365=1,v217 do v96[v218 + v365 ]=v219[v365];end local v220=v219[1];if v220 then local v386=0;while true do if (v386==0) then v96[v218]=v220;v90=v98[3];break;end end else v90=v90 + 1 ;end else local v221=0;local v222;while true do if (v221==0) then v222=v98[2];v96[v222]=v96[v222](v96[v222 + 1 ]);break;end end end elseif (v99<=42) then if (v99>41) then local v223=0;local v224;while true do if (v223==0) then v224=v98[2];do return v21(v96,v224,v91);end break;end end else for v368=v98[2],v98[3] do v96[v368]=nil;end end elseif (v99==(1230 -(1069 + 118))) then local v225=0;local v226;local v227;local v228;while true do if (0==v225) then v226=v98[4 -2 ];v227={v96[v226](v21(v96,v226 + (1 -0) ,v91))};v225=1;end if (v225==1) then v228=0;for v473=v226,v98[4] do local v474=0;while true do if (0==v474) then v228=v228 + 1 ;v96[v473]=v227[v228];break;end end end break;end end elseif (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[1 + 2 ];end elseif (v99<=52) then if (v99<=48) then if (v99<=46) then if (v99==(79 -34)) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3 + 0 ];end else v96[v98[2]]=v98[3];end elseif (v99==47) then v96[v98[2]]=v73[v98[3]];else do return;end end elseif (v99<=50) then if (v99>49) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else local v234=0;local v235;local v236;local v237;while true do if (1==v234) then v237=v98[3];for v475=792 -(368 + 423) ,v237 do v236[v475]=v96[v235 + v475 ];end break;end if (v234==0) then v235=v98[2];v236=v96[v235];v234=1;end end end elseif (v99==51) then if (v98[2]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v238=v98[2];do return v21(v96,v238,v238 + v98[3] );end end elseif (v99<=56) then if (v99<=54) then if (v99==53) then v96[v98[6 -4 ]]=v96[v98[3]] -v98[4] ;else local v240=0;local v241;local v242;local v243;while true do if (v240==1) then v243={};v242=v18({},{[v7("\14\189\117\178\53\135\100","\220\81\226\28")]=function(v478,v479) local v480=0;local v481;while true do if (v480==0) then v481=v243[v479];return v481[1][v481[2]];end end end,[v7("\44\234\140\254\253\206\29\209\135\227","\167\115\181\226\155\138")]=function(v482,v483,v484) local v485=0;local v486;while true do if (v485==0) then v486=v243[v483];v486[19 -(10 + 8) ][v486[2]]=v484;break;end end end});v240=2;end if (v240==0) then v241=v87[v98[3]];v242=nil;v240=1;end if (v240==2) then for v487=1,v98[4] do local v488=0;local v489;while true do if (v488==1) then if (v489[1]==(349 -258)) then v243[v487-1 ]={v96,v489[3]};else v243[v487-1 ]={v73,v489[3]};end v95[ #v95 + (3 -2) ]=v243;break;end if (v488==0) then v90=v90 + 1 ;v489=v86[v90];v488=1;end end end v96[v98[2]]=v40(v241,v242,v74);break;end end end elseif (v99>55) then v96[v98[2]]=v74[v98[3]];else v96[v98[1 + 1 ]]=v96[v98[3]] + v98[4] ;end elseif (v99<=58) then if (v99>57) then local v247=v98[2];v96[v247]=v96[v247]();else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99==59) then if (v96[v98[2]]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v251=v98[2];local v252={};for v370=1, #v95 do local v371=0;local v372;while true do if (v371==0) then v372=v95[v370];for v510=0, #v372 do local v511=0;local v512;local v513;local v514;while true do if (v511==0) then v512=v372[v510];v513=v512[1];v511=1;end if (1==v511) then v514=v512[3 -1 ];if ((v513==v96) and (v514>=v251)) then v252[v514]=v513[v514];v512[1]=v252;end break;end end end break;end end end end elseif (v99<=90) then if (v99<=75) then if (v99<=67) then if (v99<=(501 -(145 + 293))) then if (v99<=61) then local v137=v98[3];local v138=v96[v137];for v143=v137 + 1 ,v98[4] do v138=v138   .. v96[v143] ;end v96[v98[2]]=v138;elseif (v99==62) then if v96[v98[432 -(44 + 386) ]] then v90=v90 + 1 ;else v90=v98[1489 -(998 + 488) ];end else v96[v98[1 + 1 ]][v96[v98[3]]]=v98[4];end elseif (v99<=65) then if (v99==64) then v96[v98[2]]=v96[v98[3 + 0 ]] -v96[v98[4]] ;else for v373=v98[2],v98[3] do v96[v373]=nil;end end elseif (v99==66) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else local v257=v98[2];do return v96[v257](v21(v96,v257 + 1 ,v98[3]));end end elseif (v99<=71) then if (v99<=69) then if (v99==68) then v96[v98[2]]=v96[v98[3]][v96[v98[776 -(201 + 571) ]]];else local v260=0;local v261;local v262;while true do if (v260==1) then for v491=v261 + 1 ,v91 do v15(v262,v96[v491]);end break;end if (v260==0) then v261=v98[2];v262=v96[v261];v260=1;end end end elseif (v99==70) then local v263=v98[2];v96[v263](v21(v96,v263 + 1 ,v98[3]));else local v264=0;local v265;while true do if (v264==0) then v265=v98[2];v96[v265]=v96[v265]();break;end end end elseif (v99<=73) then if (v99==72) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v266=v98[2];v96[v266]=v96[v266](v21(v96,v266 + (1139 -(116 + 1022)) ,v98[12 -9 ]));end elseif (v99==74) then v90=v98[3];else v96[v98[2]]=v98[3]^v96[v98[4]] ;end elseif (v99<=82) then if (v99<=78) then if (v99<=76) then v96[v98[2]]=v98[3] -v96[v98[4]] ;elseif (v99==77) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);else local v271=0;local v272;local v273;local v274;while true do if (1==v271) then v274=0;for v492=v272,v98[4] do v274=v274 + 1 ;v96[v492]=v273[v274];end break;end if (0==v271) then v272=v98[2 + 0 ];v273={v96[v272](v96[v272 + 1 ])};v271=1;end end end elseif (v99<=(292 -212)) then if (v99>79) then do return v96[v98[7 -5 ]]();end else v74[v98[862 -(814 + 45) ]]=v96[v98[2]];end elseif (v99>81) then v96[v98[2]]=v96[v98[7 -4 ]][v98[4]];else local v279=0;local v280;local v281;local v282;while true do if (v279==0) then v280=v98[2];v281={v96[v280](v96[v280 + 1 ])};v279=1;end if (v279==1) then v282=0;for v495=v280,v98[4] do local v496=0;while true do if (v496==0) then v282=v282 + 1 ;v96[v495]=v281[v282];break;end end end break;end end end elseif (v99<=86) then if (v99<=84) then if (v99==83) then v96[v98[2]]=v98[3] -v96[v98[4]] ;else do return v96[v98[2]]();end end elseif (v99>(31 + 54)) then local v284=0;local v285;while true do if (0==v284) then v285=v98[887 -(261 + 624) ];v96[v285](v21(v96,v285 + 1 ,v91));break;end end else v96[v98[2]]=v96[v98[3]] -v98[4] ;end elseif (v99<=88) then if (v99>87) then local v287=v98[2];v96[v287](v21(v96,v287 + 1 ,v98[3]));else v96[v98[3 -1 ]]=v96[v98[3]][v96[v98[4]]];end elseif (v99>89) then v96[v98[2]]=v98[3]^v96[v98[4]] ;else v96[v98[2]]=v73[v98[3]];end elseif (v99<=105) then if (v99<=97) then if (v99<=93) then if (v99<=91) then v96[v98[2]]=v96[v98[3]];elseif (v99>92) then local v293=v98[1082 -(1020 + 60) ];local v294,v295=v89(v96[v293](v21(v96,v293 + 1 ,v91)));v91=(v295 + v293) -1 ;local v296=1423 -(630 + 793) ;for v375=v293,v91 do local v376=0;while true do if (v376==0) then v296=v296 + 1 ;v96[v375]=v294[v296];break;end end end else local v297=0;local v298;local v299;local v300;while true do if (v297==0) then v298=v98[2];v299=v96[v298];v297=1;end if (v297==1) then v300=v96[v298 + 2 ];if (v300>0) then if (v299>v96[v298 + 1 ]) then v90=v98[3];else v96[v298 + (9 -6) ]=v299;end elseif (v299<v96[v298 + 1 ]) then v90=v98[3];else v96[v298 + 3 ]=v299;end break;end end end elseif (v99<=95) then if (v99>(445 -351)) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else local v302=v98[2 + 1 ];local v303=v96[v302];for v377=v302 + 1 ,v98[4] do v303=v303   .. v96[v377] ;end v96[v98[2]]=v303;end elseif (v99==(330 -234)) then local v305=0;local v306;local v307;while true do if (v305==1) then for v499=v306 + 1 ,v91 do v15(v307,v96[v499]);end break;end if (v305==0) then v306=v98[2];v307=v96[v306];v305=1;end end else local v308=0;local v309;while true do if (0==v308) then v309=v98[2];v96[v309]=v96[v309](v21(v96,v309 + 1 ,v91));break;end end end elseif (v99<=101) then if (v99<=99) then if (v99>98) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99==100) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v313=0;local v314;local v315;while true do if (v313==1) then v96[v314 + 1 ]=v315;v96[v314]=v315[v98[4]];break;end if (0==v313) then v314=v98[2];v315=v96[v98[3]];v313=1;end end end elseif (v99<=103) then if (v99==102) then local v316=v98[2];v96[v316]=v96[v316](v21(v96,v316 + 1 ,v91));else local v318=0;local v319;local v320;local v321;local v322;while true do if (v318==1) then v91=(v321 + v319) -1 ;v322=0;v318=2;end if (2==v318) then for v500=v319,v91 do local v501=0;while true do if (v501==0) then v322=v322 + 1 ;v96[v500]=v320[v322];break;end end end break;end if (v318==0) then v319=v98[1749 -(760 + 987) ];v320,v321=v89(v96[v319](v21(v96,v319 + (1914 -(1789 + 124)) ,v98[3])));v318=1;end end end elseif (v99>(870 -(745 + 21))) then local v323=v98[1 + 1 ];v96[v323](v96[v323 + 1 ]);else local v324=v98[5 -3 ];local v325=v98[4];local v326=v324 + 2 ;local v327={v96[v324](v96[v324 + 1 ],v96[v326])};for v378=1,v325 do v96[v326 + v378 ]=v327[v378];end local v328=v327[1];if v328 then v96[v326]=v328;v90=v98[3];else v90=v90 + 1 ;end end elseif (v99<=113) then if (v99<=109) then if (v99<=107) then if (v99==(415 -309)) then if (v96[v98[2]]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v329=v98[2];local v330={v96[v329](v21(v96,v329 + 1 ,v91))};local v331=0;for v381=v329,v98[4] do local v382=0;while true do if (v382==0) then v331=v331 + 1 + 0 ;v96[v381]=v330[v331];break;end end end end elseif (v99==108) then local v332=v98[2];local v333=v96[v332];local v334=v96[v332 + 2 ];if (v334>0) then if (v333>v96[v332 + 1 ]) then v90=v98[3];else v96[v332 + 3 ]=v333;end elseif (v333<v96[v332 + 1 ]) then v90=v98[3];else v96[v332 + 3 ]=v333;end else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99<=111) then if (v99>110) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;else v96[v98[2]]=v96[v98[3]];end elseif (v99==112) then local v339=v98[2];do return v96[v339](v21(v96,v339 + 1 ,v91));end else local v340=0;local v341;local v342;while true do if (v340==0) then v341=v98[2];v342=v96[v98[3 + 0 ]];v340=1;end if (v340==1) then v96[v341 + 1 ]=v342;v96[v341]=v342[v98[4]];break;end end end elseif (v99<=117) then if (v99<=115) then if (v99>114) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else local v345=0;local v346;while true do if (v345==0) then v346=v98[2];do return v96[v346](v21(v96,v346 + 1 ,v91));end break;end end end elseif (v99==(1171 -(87 + 968))) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]={};end elseif (v99<=119) then if (v99>118) then v74[v98[3]]=v96[v98[2]];else v96[v98[8 -6 ]]=v96[v98[3]]%v98[4] ;end elseif (v99>120) then v96[v98[2]]();else v96[v98[2]]=v40(v87[v98[3]],nil,v74);end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
